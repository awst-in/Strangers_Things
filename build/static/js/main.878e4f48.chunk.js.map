{"version":3,"sources":["components/AccountForm.js","index.js"],"names":["API_ROOT","API_REGISTER","API_LOGIN","API_USER","AccountForm","action","setToken","setUserData","useState","username","setUsername","password","setPassword","isLogin","title","oppositeTitle","oppositeAction","actionURL","history","useHistory","handleSubmit","event","a","preventDefault","fetch","method","headers","body","JSON","stringify","user","response","json","data","token","Authorization","userResponse","push","console","error","onSubmit","type","placeholder","value","onChange","target","to","App","userData","path","ReactDOM","render","document","getElementById"],"mappings":"6MAGMA,EAAQ,uEACRC,EAAY,UAAMD,EAAN,YACZE,EAAS,UAAMF,EAAN,SACTG,EAAQ,UAAMH,EAAN,MA0ECI,EAxEK,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,OAAQC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YACvC,EAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACMC,EAAqB,UAAXR,EACVS,EAAQD,EAAU,QAAU,WAC5BE,EAAgBF,EAAU,WAAa,QACvCG,EAAiBH,EAAU,WAAa,QACxCI,EAAYJ,EAAUX,EAAYD,EAClCiB,EAAUC,cAEVC,EAAY,uCAAG,WAAOC,GAAP,2BAAAC,EAAA,6DACnBD,EAAME,iBADa,kBAKMC,MAAMP,EAAW,CACtCQ,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBC,KAAM,CACJrB,SAAUA,EACVE,SAAUA,OAbC,cAKXoB,EALW,gBAkBMA,EAASC,OAlBf,mBAkBTC,EAlBS,EAkBTA,OAEFC,EAAQD,EAAKC,OApBF,wBAuBf5B,EAAS4B,GAvBM,UAwBYV,MAAMrB,EAAU,CACzCuB,QAAS,CACP,eAAgB,mBAChBS,cAAc,UAAD,OAAYD,MA3Bd,eAwBTE,EAxBS,iBA8BQA,EAAaJ,OA9BrB,iBA8BPC,EA9BO,EA8BPA,KAER1B,EAAY0B,GACZf,EAAQmB,KAAK,KAjCE,0DAoCjBC,QAAQC,MAAR,MApCiB,0DAAH,sDAuClB,OACE,qCACE,6BAAKzB,IACL,uBAAM0B,SAAUpB,EAAhB,UACE,uBACEqB,KAAK,OACLC,YAAY,WACZC,MAAOlC,EACPmC,SAAU,SAACvB,GAAD,OAAWX,EAAYW,EAAMwB,OAAOF,UAEhD,uBACEF,KAAK,WACLC,YAAY,WACZC,MAAOhC,EACPiC,SAAU,SAACvB,GAAD,OAAWT,EAAYS,EAAMwB,OAAOF,UAEhD,wBAAQF,KAAK,SAAb,SAAuB3B,OAEzB,cAAC,IAAD,CAAMgC,GAAE,UAAK9B,GAAb,SAAgCD,QCtEhCgC,EAAM,WACV,MAA0BvC,mBAAS,IAAnC,mBAAcF,GAAd,WACA,EAAgCE,mBAAS,IAAzC,mBAAOwC,EAAP,KAAiBzC,EAAjB,KACA,OACE,qCACE,mDACCyC,EAASvC,UAAY,yCAAYuC,EAASvC,YAC3C,cAAC,IAAD,CAAOwC,KAAK,YAAZ,SACE,cAAC,EAAD,CACE5C,OAAO,WACPC,SAAUA,EACVC,YAAaA,MAGjB,cAAC,IAAD,CAAO0C,KAAK,SAAZ,SACE,cAAC,EAAD,CACE5C,OAAO,QACPC,SAAUA,EACVC,YAAaA,UAOvB2C,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.878e4f48.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\n\nconst API_ROOT = `https://strangers-things.herokuapp.com/api/2108-LSU-RM-WEB-PT/users/`;\nconst API_REGISTER = `${API_ROOT}register`;\nconst API_LOGIN = `${API_ROOT}login`;\nconst API_USER = `${API_ROOT}me`;\n\nconst AccountForm = ({ action, setToken, setUserData }) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const isLogin = action === 'login';\n  const title = isLogin ? 'Login' : 'Register';\n  const oppositeTitle = isLogin ? 'Register' : 'Login';\n  const oppositeAction = isLogin ? 'register' : 'login';\n  const actionURL = isLogin ? API_LOGIN : API_REGISTER;\n  const history = useHistory();\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    // console.log(`user name: ${username}`);\n    // console.log(`password: ${password}`);\n    try {\n      const response = await fetch(actionURL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          user: {\n            username: username,\n            password: password,\n          },\n        }),\n      });\n\n      const { data } = await response.json();\n      // console.log(data);\n      const token = data.token;\n      // console.log(token);\n      if (token) {\n        setToken(token);\n        const userResponse = await fetch(API_USER, {\n          headers: {\n            'Content-type': 'application/json',\n            Authorization: `Bearer ${token}`,\n          },\n        });\n        const { data } = await userResponse.json();\n        // console.log(data);\n        setUserData(data);\n        history.push('/');\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return (\n    <>\n      <h4>{title}</h4>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"username\"\n          value={username}\n          onChange={(event) => setUsername(event.target.value)}\n        ></input>\n        <input\n          type=\"password\"\n          placeholder=\"password\"\n          value={password}\n          onChange={(event) => setPassword(event.target.value)}\n        ></input>\n        <button type=\"submit\">{title}</button>\n      </form>\n      <Link to={`${oppositeAction}`}>{oppositeTitle}</Link>\n    </>\n  );\n};\n\nexport default AccountForm;","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { AccountForm } from './components';\n\nconst App = () => {\n  const [token, setToken] = useState('');\n  const [userData, setUserData] = useState({});\n  return (\n    <>\n      <h1>Stranger's Things</h1>\n      {userData.username && <div>Hello {userData.username}</div>}\n      <Route path=\"/register\">\n        <AccountForm\n          action=\"register\"\n          setToken={setToken}\n          setUserData={setUserData}\n        />\n      </Route>\n      <Route path=\"/login\">\n        <AccountForm\n          action=\"login\"\n          setToken={setToken}\n          setUserData={setUserData}\n        />\n      </Route>\n    </>\n  );\n};\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('app')\n);\n"],"sourceRoot":""}